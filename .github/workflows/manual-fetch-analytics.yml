name: Fetch Google Analytics Data (Manual)

# This allows the workflow to be triggered manually from the GitHub Actions tab.
on:
  workflow_dispatch:

jobs:
  fetch-analytics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install googleapis
      - name: Log the entire Service Account Key (For Debugging - Private Repo Only)
        run: echo "$GA_SERVICE_ACCOUNT_KEY"
        env:
          GA_SERVICE_ACCOUNT_KEY: ${{ secrets.GA_SERVICE_ACCOUNT_KEY }}

      - name: Fetch Google Analytics Data
        env:
          GA_SERVICE_ACCOUNT_KEY: ${{ secrets.GA_SERVICE_ACCOUNT_KEY }}
          GA_VIEW_ID: ${{ secrets.GA_VIEW_ID }}
        run: |
          echo "$GA_SERVICE_ACCOUNT_KEY" > service-account.json
          node -e "
          const { google } = require('googleapis');
          const fs = require('fs');
          echo "GA_SERVICE_ACCOUNT_KEY starts with: ${GA_SERVICE_ACCOUNT_KEY:0:50}"
          async function fetchData() {
            const auth = new google.auth.GoogleAuth({
              keyFile: 'service-account.json',
              scopes: ['https://www.googleapis.com/auth/analytics.readonly'],
            });
            const analytics = google.analyticsreporting({ version: 'v4', auth });
            const response = await analytics.reports.batchGet({
              requestBody: {
                reportRequests: [{
                  viewId: process.env.GA_VIEW_ID,
                  dateRanges: [{ startDate: '30daysAgo', endDate: 'today' }],
                  metrics: [{ expression: 'ga:sessions' }]
                }]
              }
            });

            // Extract the session data
            const sessions = response.data.reports[0].data.totals[0].values[0];

            // Print the fetched session data to stdout for debugging
            console.log('Fetched sessions:', sessions);

            // Write the session data to visits.json
            fs.writeFileSync('visits.json', JSON.stringify({ visits: sessions }));

            // Print the contents of visits.json to stdout for debugging
            console.log('visits.json content:', JSON.stringify({ visits: sessions }));
          }

          fetchData();
          "

          rm service-account.json  # Remove the service account file after use


      - name: Commit updated data
        run: |
          git config --global user.name "MilanKacar"
          git config --global user.email "actions@github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add visits.json
            git commit -m "Update visit count"
            git push
          else
            echo "No changes to commit"
          fi


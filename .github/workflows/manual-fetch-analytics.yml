name: Fetch Google Analytics Data (Manual)

# This allows the workflow to be triggered manually from the GitHub Actions tab.
on:
  workflow_dispatch:

jobs:
  fetch-analytics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install googleapis

      - name: Fetch Google Analytics 4 Data
        env:
          GA_SERVICE_ACCOUNT_KEY: ${{ secrets.GA_SERVICE_ACCOUNT_KEY }}
          GA_PROPERTY_ID: ${{ secrets.GA_PROPERTY_ID }}
        run: |
          echo "$GA_SERVICE_ACCOUNT_KEY" > service-account.json
          node -e "
          const { google } = require('googleapis');
          const fs = require('fs');
          async function fetchGA4Data() {
            const auth = new google.auth.GoogleAuth({
              keyFile: 'service-account.json',
              scopes: ['https://www.googleapis.com/auth/analytics.readonly'],
            });
            const analyticsdata = google.analyticsdata('v1beta');

            // Send a request to the GA4 Data API to retrieve activeUsers
            const response = await analyticsdata.properties.runReport({
              property: 'properties/' + process.env.GA_PROPERTY_ID,
              requestBody: {
                dimensions: [{ name: 'date' }],
                metrics: [{ name: 'activeUsers' }],
                dateRanges: [{ startDate: '30daysAgo', endDate: 'today' }]
              }
            });

            // Extract the activeUsers data from the response
            const activeUsers = response.data.rows.map(row => ({
              date: row.dimensionValues[0].value,
              activeUsers: row.metricValues[0].value,
            }));

            // Print the fetched data to stdout for debugging
            console.log('Fetched active users data:', activeUsers);

            // Write the data to visits.json
            fs.writeFileSync('visits.json', JSON.stringify({ data: activeUsers }, null, 2));

            // Print the contents of visits.json to stdout for debugging
            console.log('visits.json content:', JSON.stringify({ data: activeUsers }, null, 2));
          }

          fetchGA4Data();
          "

          rm service-account.json  # Remove the service account file after use


      - name: Commit updated data
        run: |
          git config --global user.name "MilanKacar"
          git config --global user.email "actions@github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add visits.json
            git commit -m "Update visit count"
            git push
          else
            echo "No changes to commit"
          fi

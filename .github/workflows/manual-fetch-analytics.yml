name: Fetch Google Analytics Data (GA4)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  fetch-analytics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          npm install googleapis@105 @google-cloud/local-auth@2.1.0 --save
          npm install @google-analytics/data

      - name: Set Google Credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GA_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > service-account.json
          
          # Ensure the JSON is valid
          if ! cat service-account.json | jq empty; then
            echo "Invalid JSON in GA_SERVICE_ACCOUNT_KEY"
            exit 1
          fi

      - name: Fetch Google Analytics 4 Data
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service-account.json
          GA_PROPERTY_ID: ${{ secrets.GA_PROPERTY_ID }}
        run: |
          node -e "
          const fs = require('fs');
          const {BetaAnalyticsDataClient} = require('@google-analytics/data');

          const analyticsDataClient = new BetaAnalyticsDataClient();

          async function runReport(propertyId) {
              try {
                  const [response] = await analyticsDataClient.runReport({
                      property: 'properties/' + propertyId,
                      dateRanges: [
                          { startDate: '2024-09-23', endDate: 'today' },
                      ],
                      dimensions: [{ name: 'country' }],
                      metrics: [{ name: 'eventCount' }]
                  });

                  // Extract the report data, check if it's empty
                  const reportData = response.rows.map(row => ({
                      city: row.dimensionValues[0].value,
                      activeUsers: row.metricValues[0].value
                  }));

                  let outputData = {};

                  if (reportData.length === 0) {
                      outputData = { visits: 0 }; // No data, write default
                  } else {
                      outputData = { data: reportData }; // Data exists
                  }

                  // Print report to stdout for debugging
                  console.log('Report result:', outputData);

                  // Save report data to a JSON file
                  fs.writeFileSync('visits.json', JSON.stringify(outputData, null, 2));

                  // Print the contents of visits.json to stdout for debugging
                  console.log('visits.json content:', JSON.stringify(outputData, null, 2));
              } catch (error) {
                  console.error('Error fetching GA4 data:', error);
              }
          }

          runReport(process.env.GA_PROPERTY_ID);
          "

          rm service-account.json  # Remove the service account file after use

      - name: Commit updated data
        run: |
          git config --global user.name "MilanKacar"
          git config --global user.email "milankacar@live.com"

          # Show git status for debugging
          git status

          # Check for any changes in the repository
          if [ -n "$(git status --porcelain)" ]; then
            git add visits.json
            git commit -m "Update visit count"
            git push
          else
            echo "No changes to commit"
          fi

